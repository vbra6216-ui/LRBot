#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ JSON —Ñ–∞–π–ª–µ
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
"""

import json
import random
from datetime import datetime, timedelta
import os

def generate_realistic_stats():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    
    # –ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    base_users = 1250
    base_searches = 300
    base_online = 20
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏
    total_users = base_users + random.randint(-50, 100)
    today_searches = base_searches + random.randint(-30, 50)
    online_users = base_online + random.randint(-5, 10)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –Ω–µ–¥–µ–ª—é
    weekly_data = []
    for i in range(7):
        # –ë–æ–ª—å—à–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ
        base_activity = 40 + random.randint(-10, 20)
        if i in [5, 6]:  # –°—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
            base_activity += 20
        weekly_data.append(base_activity)
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    commands = [
        ("/help", 150, 20),
        ("/gps", 130, 15),
        ("/rules", 95, 10),
        ("/duty", 85, 8),
        ("/mute", 75, 6),
        ("/ban", 65, 5),
        ("/kick", 55, 4),
        ("/warn", 45, 3)
    ]
    
    top_commands = []
    for cmd, base_count, variation in commands:
        count = base_count + random.randint(-variation, variation)
        top_commands.append({"name": cmd, "count": max(1, count)})
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
    top_commands.sort(key=lambda x: x['count'], reverse=True)
    top_commands = top_commands[:5]  # –¢–æ–ª—å–∫–æ —Ç–æ–ø-5
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = [
        ("–ö–æ–º–∞–Ω–¥—ã", 45),
        ("GPS", 25),
        ("RP-—Ç–µ—Ä–º–∏–Ω—ã", 20),
        ("–ü—Ä–∞–≤–∏–ª–∞", 15),
        ("–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏", 10)
    ]
    
    category_data = []
    category_labels = []
    for cat, base_percent in categories:
        percent = base_percent + random.randint(-5, 5)
        category_data.append(max(1, percent))
        category_labels.append(cat)
    
    return {
        "totalUsers": total_users,
        "todaySearches": today_searches,
        "totalFavorites": 567 + random.randint(-20, 20),
        "todaySessions": online_users + random.randint(-3, 5),
        "onlineUsers": online_users,
        "weeklyActivity": {
            "labels": ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"],
            "data": weekly_data
        },
        "categoryUsage": {
            "labels": category_labels,
            "data": category_data
        },
        "topCommands": top_commands,
        "lastUpdated": datetime.now().isoformat() + "Z"
    }

def update_statistics_file():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        stats = generate_realistic_stats()
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
        with open('statistics.json', 'w', encoding='utf-8') as f:
            json.dump(stats, f, ensure_ascii=False, indent=2)
        
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['totalUsers']}")
        print(f"üîç –ü–æ–∏—Å–∫–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {stats['todaySearches']}")
        print(f"üü¢ –û–Ω–ª–∞–π–Ω: {stats['onlineUsers']}")
        print(f"üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {stats['lastUpdated']}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return False

def main():
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Mini App...")
    
    if update_statistics_file():
        print("\nüéâ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        print("üí° –ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π statistics.json –Ω–∞ GitHub Pages")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")

if __name__ == "__main__":
    main() 